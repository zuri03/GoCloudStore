Completely refactor client to fit new architecture
    client must first send http request to metadata server for file location
    client must open tcp connection to correct data server and read/write file data from tcp connection
    Determine how to optimize connections by using the least amount of connections possible
    set up addAllowedUser, removeAllowedUser, deleteRecord requests on cli
    create more robust error/success messages for the user

set up one time command/client 
    set up switch statement in main.go similar to switch statement in cli loop

gather all steps of each command into a single function     
    this function can be called either by the cli loop or the main function for single use
    this function will have all of the steps to complete a single command to make each command more cohesive and reusable

Add rest api to record keeper
    Add dynamic urls to paths
    

Add database support to record keeper  
    records will be stored in a database for persistant storage
    determine which database to use for the record keeper

Set up data node:
    data node will contain the file data referenced by the records in records storage

Add users service:
    this service will be a rest api that provides persistant storage for user objects
    